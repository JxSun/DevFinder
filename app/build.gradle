apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.jxsun.devfinder"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "CLIENT_ID", properties.getProperty("CLIENT_ID")
        buildConfigField "String", "CLIENT_SECRET", properties.getProperty("CLIENT_SECRET")
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions {
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.ktx}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "com.google.android.material:material:${versions.material}"

    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.room:room-rxjava2:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

    implementation "com.google.code.gson:gson:${versions.gson}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "org.koin:koin-core:${versions.koin}"
    implementation "org.koin:koin-androidx-scope:${versions.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"
    implementation "com.jakewharton.rxbinding3:rxbinding:${versions.rxBinding}"

    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxJava}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"

    testImplementation "junit:junit:${versions.junit}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitoKotlin}"
    androidTestImplementation "androidx.test:runner:${versions.testRunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
}
